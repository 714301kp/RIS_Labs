1.     Что такое Java EE ?
Это набор спецификаций и соответствующей документации для языка Java, описывающей архитектуру серверной платформы для задач средних и крупных предприятий.
2.     Какие возможности предоставляет?
Java EE состоит из набора API и среды выполнения. Некоторые из API:
- Java Servlets. Сервлеты представляют специальные модули, которые обрабатывают запросы от пользователей и отправляют результат обработки.
- JavaServer Pages (JSP). Также модули на стороне сервера, которые обрабатывают запросы. Удобны для генерации большого контента HTML. По сути предствляют собой страницы с кодом HTML/JavaScript/CSS с вкраплениями кода на Java
- Enterprise JavaBeans (EJB) представляют классы, которые хранят бизнес-логику.
- Contexts and Dependency Injection (CDI) предоставляет механизм для внедрения и управления зависимостями в другие объекты.
- JSON Processing (JSON-P) позволяет работать со строками JSON в Java
- JSON Binding (JSON-B) предоставляет функционал для сериализации и десериализации JSON в объекты Java.
- WebSocket позволяет интегрировать WebSocket в приложения на Java.
- Java Message Service (JMS) - API для пересылки сообщений между двумя и более клиентами.
- Security API - API для стандартизации и упрощения задач обеспечения безопасности в приложениях на Java.
- Java API for RESTful Web Services (JAX-RS) - API для применения архитектуры REST в приложениях.
- JavaServer Faces (JSF) предоставляет возможности для создания пользовательского интерфейса на стороне сервера.
3.     Охарактеризуйте многоуровневую архитектуру.
Приложение состоит из EJB-контейнера, Entity Manager и JPA. EJB-контейнер обращается к Entity Manager. И EJB-контейнер, и Entity Manager могут обращаться к JPA.
Традиционная слоситая архитектура предпологает разделение приложения на 4 базовых слоя:слой презентации, слой бизнес-логики, слой хранения данных, слой самой базы данных.
4.     Что называется компонентом?  Назовите типы компонентов.
EJB-компонент представляет из себя Java-класс, который реализует некоторую бизнес-логику. Все остальные классы в EJB-системе либо реализуют поддержку клиент/сервер взаимодйествий между компонентами, либо реализуют некоторые сервисы для компонентов.
Существует три типа компонентов EJB: Session, Message-driven beans  и Entity-Компоненты
5.     Что такое контейнер? Назовите типы контейнеров.
Сервер приложений j2ee состоит из двух основных элементов: контейнер web-приложения (JSP, JSF и т.д.) и EJB-контейнер. Первый служит для создания пользовательского интерфейса и слабо подходит для описания бизнес-логики приложения. Для этого используется вторая часть J2EE - EJB.
6.     Что такое развертывание (deployment)?
Это все действия, которые делают программную систему готовой к использованию:
- выпуск
- установка и активация
- деактивация
- адаптация
- обновление
- встройка
- отслеживание версий
- удаление
- изъятие из обращения
7.     Что такое модуль Java EE? Назовите типы модулей.
Модуль Java EE –  это совокупность одного или более компонентов, которые исполняются в контейнере одного вида (например, web или EJB) с аннотациями или дескрипторами развертывания  того же вида. Дескрипторы бывают стандарта Java EE и специфические именно для Application Server. Аннотации могут  использоваться вместо стандартных Java EE-дескрипторов.
Виды модулей: WebApplicationArchive, JARфайл с EJB, JAR-файл с клиентским приложением,  RAR-файл с ресурсами.
8.     Для чего служат аннот  неру, что класс будет stateless session bean. Для него контейнер обеспечит безопасность потоков и менеджмент транзакций. Дополнительно, вы можете добавить другие свойства, например прозрачное управление безопасностью и перехватчики событий; Local - относится к интерфейсу и говорит, что bean реализующий интерфейс доступен локально Remote - относится к интерфейсу и говорит, что bean доступен через RMI (Remote Method Invocation) EJB - применятеся в коде, где мы используем bean. Stateful - говорит контейнеру, что класс будет stateful session bean.
9.     Как запустить сервер приложений?
В качестве сервера для сборки, развертывания и запуска приложений Java EE мы будем использовать TheSunJava™ SystemApplicationServer (кратко – Application Server).
Чтобы   запустить SunJavaSystemApplicationServer, PlatformEdition 9 можно воспользоваться либо командной строкой, набрав asadminstart-domaindomain1. Чтобы убедиться, что сервер запущен, наберите в строке адреса браузера http://localhost:8080.
10.    Какими инструментами обеспечивает Sun Application Server для сборки и развертывания приложений?
- утилита asant
- интегрированная среда разработки NetBeans IDE
- утилита verifier
- утилита asant
- JSR 88
- развертывание из AdminConsole (http://localhost:4848)
- развертывание с помощью команд asadmin
