1.     Что такое EJB?
 Enterprise JavaBeans – это высокоуровневая, базирующаяся на использовании компонентов технология создания распределенных приложений, которая использует низкоуровневый API для управления транзакциями. EJB существенно упрощает разработку, поставку и настройку систем уровня предприятия, написанных на Java.

2.     Из каких частей состоит сервер EJB?
Сервер приложений EJB состоит из двух основных элементов: контейнер web-приложения и EJB-контейнер. Первый служит для создания пользовательского интерфейса и второй - для описания бизнес-логики приложения. 
3.     Какие существуют типы архитектур EJB?
Traditional layered architecture (состоит из слоя презентации, слоя бизнес-логики, слоя хранения данных и слоя самой базы данных) и domain-driven design (Архитектура предполагает, что объекты обладают бизнес-логикой, а не являются простой репликацией объектов БД. Иногда создаётся отдельный слой для логики, называемый service layer или application layer)
4.     Какие задачи у EJB-контейнера?
Обеспечение безопасности (обеспечивает защиту данных за счет предоставления доступа только для авторизованных клиентов и только  к разрешеным методам)
Обеспечение удаленных вызовов (контейнер берет на себя все низкоуровневые вопросы обеспечения взаймодействия и организации удаленных вызовов)
Управление циклом жизни (клиент создает и уничтожает экземпляры компонентов, тем не менее, контейнер для оптимизации ресурсов и повышения производительности системы может выполнить некоторые функции)
Управление транзакциями (обеспечивает защиту данных и гарантирует успешное подтверждение внесенных данных или откат транзакции)

5.     Чем отличаются stateless и stateful beans?
Контейнер помещает экземпляры stateless бинов в общее хранилище и множество клиентов могут использовать один экземпляр бина.
В отличии от stateless stateful бины инстанцируются для каждого пользователя отдельно.
6.     Какие требования предъявляются к классу Java, чтобы он мог использоваться в качестве session bean?
- класс должен иметь как минимум один метод
- класс не должен быть абстрактным
- класс должен иметь конструктор по-умолчанию
- методы класса не должны начинаться с "ejb"
7.     В каких случаях нужно использовать EJB?
Если требуются следующие особенности приложения:
- поддержка сохранности данных (данные должны быть в сохранности после остановки программы, достигается с помощью использования БД)
- поддержка распределённых транзакций
- поддержка параллельного изменения данных и многопоточность
- поддержка событий
- поддержка именования и каталогов
- безопасность и ограничение доступа к данным
- поддержка автоматизированной установки приложений на сервер 
- удалённый доступ

8.     Какие бывают типы EJB-компонентов?
- объектные (Entity Bean)
- сессионные (Session Beans)
    stateless (без состояния)
    stateful (с поддержкой текущего состояния сессии)
    singleton (один объект на все приложение)
- управляемые сообщениями (Message Driven Beans)

9.     Какие преимущества у EJB?
- обработка системных сервисов контейнером
- возможность построения приложения из существующих модулей
- автоматизированное создание инфраструктурного кода
- декларативная модель разработки